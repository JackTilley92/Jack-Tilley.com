{"version":3,"sources":["../src/GLStaticContainer.js"],"names":[],"mappings":"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","file":"GLStaticContainer.js","sourcesContent":["import invariant from \"invariant\";\nimport React from \"react\";\nconst {\n  Component,\n  PropTypes,\n  Children\n} = React;\nimport {Surface, toBlobSupported} from \"gl-react-dom\";\n\nconst pendings = [];\nlet nbRenderings = 0;\n\nclass GLStaticContainer extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      frame: null,\n      frameId: 1,\n      framePendingLoad: false,\n      shouldUpdate: false,\n      renderingId: 1\n    };\n    this._pending = false;\n    this._rendering = false;\n  }\n\n  addPending (init) {\n    if (!this._pending) {\n      if (init)\n        pendings.push(this);\n      else\n        pendings.unshift(this);\n      this._pending = true;\n    }\n  }\n  removePending () {\n    if (this._pending) {\n      const i = pendings.indexOf(this);\n      if (i !== -1) pendings.splice(i, 1);\n      this._pending = false;\n    }\n  }\n  isPending () {\n    return this._pending;\n  }\n\n  addRendering () {\n    if (!this._rendering) {\n      nbRenderings ++;\n      this._rendering = true;\n    }\n  }\n  removeRendering () {\n    if (this._rendering) {\n      nbRenderings --;\n      this._rendering = false;\n    }\n  }\n  isRendering () {\n    return this._rendering;\n  }\n\n  componentWillMount () {\n    this.addPending(true);\n    this.pendingCheckLoad();\n  }\n\n  componentWillUnmount () {\n    this.removePending();\n    this.removeRendering();\n    if (this._timeout) clearTimeout(this._timeout);\n    if (this._shouldUpdateTimeout) clearTimeout(this._shouldUpdateTimeout);\n    if (this.state.frame && toBlobSupported) {\n      URL.revokeObjectURL(this.state.frame);\n    }\n  }\n\n  componentWillReceiveProps ({ shouldUpdate: propsShouldUpdate }) {\n    const shouldUpdate = this.syncShouldUpdate(!!propsShouldUpdate);\n    if (!this.isRendering()) {\n      if (shouldUpdate)\n        this.addPending();\n      this.pendingCheckLoad();\n    }\n    this.renderingCheckLoad();\n  }\n\n  shouldComponentUpdate (nextProps, nextState) {\n    const state = this.state;\n    return !this._frozen && (\n      nextProps.shouldUpdate ||\n      nextState.frame !== state.frame ||\n      nextState.frameId !== state.frameId ||\n      nextState.framePendingLoad !== state.framePendingLoad ||\n      nextState.renderingId !== state.renderingId ||\n      nextState.shouldUpdate !== state.shouldUpdate\n    );\n  }\n\n  syncShouldUpdate (shouldUpdate) {\n    const old = this.state.shouldUpdate;\n    if (shouldUpdate !== old) {\n      const {debounceShouldUpdate} = this.props;\n      if (this._shouldUpdateTimeout) {\n        clearTimeout(this._shouldUpdateTimeout);\n      }\n      if (shouldUpdate || debounceShouldUpdate<=0) {\n        this.setState({ shouldUpdate });\n        return shouldUpdate;\n      }\n      else {\n        this._shouldUpdateTimeout = setTimeout(\n          () => this.setState({ shouldUpdate }),\n          this.props.debounceShouldUpdate);\n      }\n    }\n    return old;\n  }\n\n  pendingCheckLoad = triggersReload => {\n    if (this._frozen) return;\n    if (nbRenderings < this.props.maximumConcurrent && this.isPending()) {\n      this.removePending();\n      this.addRendering();\n      if (triggersReload) {\n        this._frozen = true;\n        this._timeout = setTimeout(() => {\n          this._frozen = false;\n          this.setState({ renderingId: this.state.renderingId + 1 });\n        }, this.props.timeout);\n      }\n      else {\n        this.setState({ renderingId: this.state.renderingId + 1 });\n      }\n    }\n  };\n\n  renderingCheckLoad = () => {\n    if (this._frozen) return;\n    if (this._loaded && this._surface && this.isRendering()) {\n      if (!this.state.shouldUpdate) {\n        if (!this.state.framePendingLoad) {\n          this._frozen = true;\n          this._surface\n          .captureFrame({ format: toBlobSupported ? \"blob\" : \"base64\" })\n          .then(toBlobSupported ?\n            frameBlob => URL.createObjectURL(frameBlob) :\n            frame => frame\n          )\n          .then(frame => {\n            this._frozen = false;\n            this.setState({\n              frame,\n              frameId: this.state.frameId + 1,\n              framePendingLoad: true\n            });\n          });\n        }\n      }\n      else {\n        const {frame} = this.state;\n        if (frame) {\n          if (frame && toBlobSupported) {\n            URL.revokeObjectURL(frame);\n          }\n          this.setState({ frame: null, frameBlob: null });\n        }\n      }\n    }\n  };\n\n  onFrameLoad = () => {\n    this.removeRendering();\n    this.setState({ framePendingLoad: false });\n    pendings.forEach(p => p.pendingCheckLoad(true));\n  };\n\n  render () {\n    const { frame, frameId, framePendingLoad } = this.state;\n    const { children, shouldUpdate, maximumConcurrent, style, ...rest } = this.props;\n    const surface = Children.only(children);\n    invariant(children && children.type === Surface,\n      \"GLStaticContainer `children` props must be a Surface. Got: %s\",\n      children && children.type);\n    const { props: surfaceProps, ref: originalRef } = surface;\n    const { width, height } = surfaceProps;\n\n    const wrapperStyle = {\n      position: \"relative\",\n      ...style,\n      width: width,\n      height: height,\n      overflow: \"hidden\"\n    };\n\n    let staticChildren = [];\n\n    if (frame) {\n      // Render the static content (captured frame)\n      staticChildren.push(\n        <img\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width,\n            height\n          }}\n          src={frame}\n          key={\"img_\"+frameId}\n          onLoad={this.onFrameLoad}\n        />\n      );\n    }\n\n    if (framePendingLoad || this.isRendering()) {\n      // Render the Surface and captureFrame() it\n      staticChildren.push(React.cloneElement(surface, {\n        ...surfaceProps,\n        style: {\n          ...(surfaceProps.style||{}),\n          position: \"absolute\",\n          top: 0,\n          left: 0\n        },\n        key: \"canvas\",\n        ref: surface => {\n          if (typeof originalRef === \"function\")\n            originalRef(surface);\n          this._surface = surface;\n          if (surface) this.renderingCheckLoad();\n        },\n        onLoad: () => {\n          if (surfaceProps.onLoad) surfaceProps.onLoad();\n          this._loaded = true;\n          this.renderingCheckLoad();\n        }\n      }));\n    }\n\n    return <div {...rest} style={wrapperStyle}>{staticChildren}</div>;\n  }\n}\n\nGLStaticContainer.defaultProps = {\n  shouldUpdate: false,\n  maximumConcurrent: 8,\n  timeout: 30,\n  debounceShouldUpdate: 100\n};\n\nGLStaticContainer.propTypes = {\n  shouldUpdate: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  maximumConcurrent: PropTypes.number,\n  timeout: PropTypes.number,\n  debounceShouldUpdate: PropTypes.number\n};\n\nmodule.exports = GLStaticContainer;\n"]}